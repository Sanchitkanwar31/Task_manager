{"ast":null,"code":"var _jsxFileName = \"D:\\\\dell\\\\Html project\\\\intern_march\\\\TASK_MANAGER\\\\client\\\\src\\\\Tasklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8000\"; // backend url\n\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    status: false\n  });\n\n  // Fetch all tasks\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${API_URL}/tasks`);\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  // Create a new task\n  const handleCreate = async () => {\n    if (!newTask.title || !newTask.description) {\n      alert(\"Title and Description are required!\");\n      return;\n    }\n    try {\n      var _newTask$status;\n      const response = await fetch(`${API_URL}/newtasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: newTask.title,\n          description: newTask.description,\n          status: (_newTask$status = newTask.status) !== null && _newTask$status !== void 0 ? _newTask$status : false // Ensure status is always sent\n        })\n      });\n      if (response.ok) {\n        fetchTasks(); // Refresh task list\n        setNewTask({\n          title: \"\",\n          description: \"\",\n          status: false\n        }); // Reset input\n      }\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Update task status\n  const handleUpdate = async id => {\n    const taskToUpdate = tasks.find(t => t.id === id);\n    if (!taskToUpdate) return;\n    try {\n      await fetch(`${API_URL}/updatetasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: taskToUpdate.title,\n          description: taskToUpdate.description,\n          status: true // Mark as completed\n        })\n      });\n      fetchTasks(); // Refresh task list\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Delete task\n  const handleDelete = async id => {\n    try {\n      await fetch(`${API_URL}/deltask/${id}`, {\n        method: \"DELETE\"\n      });\n      fetchTasks(); // Refresh task list\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Load tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Title\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Description\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.status ? \"✅ Completed\" : \"⏳ Pending\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(task.id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startEdit(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), editTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editTask.title,\n        onChange: e => setEditTask({\n          ...editTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editTask.description,\n        onChange: e => setEditTask({\n          ...editTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"VG7+hawJOItSlX0zvAao2OZStX0=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","TaskList","_s","tasks","setTasks","newTask","setNewTask","title","description","status","fetchTasks","response","fetch","data","json","error","console","handleCreate","alert","_newTask$status","method","headers","body","JSON","stringify","ok","handleUpdate","id","taskToUpdate","find","t","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","handleComplete","startEdit","editTask","setEditTask","_c","$RefreshReg$"],"sources":["D:/dell/Html project/intern_march/TASK_MANAGER/client/src/Tasklist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst API_URL = \"http://localhost:8000\"; // backend url\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: \"\", description: \"\", status: false });\r\n\r\n  // Fetch all tasks\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks`);\r\n      const data = await response.json();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  // Create a new task\r\n  const handleCreate = async () => {\r\n    if (!newTask.title || !newTask.description) {\r\n      alert(\"Title and Description are required!\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_URL}/newtasks`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          title: newTask.title,\r\n          description: newTask.description,\r\n          status: newTask.status ?? false, // Ensure status is always sent\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        fetchTasks(); // Refresh task list\r\n        setNewTask({ title: \"\", description: \"\", status: false }); // Reset input\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n  \r\n  // Update task status\r\n  const handleUpdate = async (id) => {\r\n    const taskToUpdate = tasks.find((t) => t.id === id);\r\n    if (!taskToUpdate) return;\r\n  \r\n    try {\r\n      await fetch(`${API_URL}/updatetasks/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          title: taskToUpdate.title, \r\n          description: taskToUpdate.description, \r\n          status: true, // Mark as completed\r\n        }),\r\n      });\r\n  \r\n      fetchTasks(); // Refresh task list\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n  \r\n  // Delete task\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`${API_URL}/deltask/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      fetchTasks(); // Refresh task list\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  // Load tasks on component mount\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Manager</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Task Title\"\r\n        value={newTask.title}\r\n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Task Description\"\r\n        value={newTask.description}\r\n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n      />\r\n      <button onClick={handleCreate}>Add Task</button>\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.status ? \"✅ Completed\" : \"⏳ Pending\"}\r\n            <button onClick={() => handleComplete(task.id)}>Complete</button>\r\n            <button onClick={() => startEdit(task)}>Edit</button>\r\n            <button onClick={() => handleDelete(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Edit Task Form */}\r\n      {editTask && (\r\n        <div>\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editTask.title}\r\n            onChange={(e) => setEditTask({ ...editTask, title: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editTask.description}\r\n            onChange={(e) => setEditTask({ ...editTask, description: e.target.value })}\r\n          />\r\n          <button onClick={handleUpdate}>Save</button>\r\n          <button onClick={() => setEditTask(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}